#!/usr/bin/env bash
#
# author: daniel neemann (@zzzeyez)
#
# displays notifications on macos
# requires `ubersicht` and `imagemagick`

uber="${HOME}/Library/Application Support/Ãœbersicht/widgets/"
image="$uber/xanthia/.cache/image.png"
message="$uber/xanthia/.cache/message"

exists() {
    type "$1" &> /dev/null ;
}

setup() {
	touch "$message"
}

icon() {
	convert "$1" "$image" &&
	ps cax | grep sicht > /dev/null
	if [ $? -eq 0 ]; then
	osascript -e 'tell application "'$(ps ax | grep sicht | awk '{print $5}' | \
	head -1 | cut -d/ -f3 | cut -d. -f1)'" to refresh widget id "xanthia-image-coffee"'
	fi
}

notify() {
	echo "$1" > "$message" &&
	ps cax | grep sicht > /dev/null
	if [ $? -eq 0 ]; then
		osascript -e 'tell application "'$(ps ax | grep sicht | awk '{print $5}' | \
		head -1 | cut -d/ -f3 | cut -d. -f1)'" to refresh widget id "xanthia-message-coffee"'
	elif exists /usr/local/bin/terminal-notifier
	then
		terminal-notifier -message "$(cat "$message")"
	else
		exit
	fi
}

help() {
	printf "%s" \
"xanthia: a notification system for macOS

Usage: notify-send [option] [argument]
       [-i 'path/to/image'] [-m 'message']
       
Example: notify-send -m \"file saved\"
         notify-send -i \"~/downloads/img.jpg\" -m \"img.jpg saved\"
	 notify-send -i \"~/downloads/img.jpg\"
	 notify-send \"upload finished\""
}

flags() {
	while getopts m:i: opt
		do
			case $opt in
			m) notify "$OPTARG"
			;;
			i) icon "$OPTARG"
			;;
			*) help
			;;
		esac
	done
	# if no flags are provided do `new-roses [searchterm] [bgcolor]`
	shift "$((OPTIND-1))" 
	if [ "$1" != "-*" ] && [ "$1" ] ;
	then
		notify "$1"
	fi
}

setup
flags "$@"

#########
# TO DO #
#########

# support non-default uberischt directories
# add image variables to `pecan`
